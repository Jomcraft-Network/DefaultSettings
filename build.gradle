buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'signing'

version = "1.17.x-2.5.2"

def fileVersion = "2.5.2"
def signSHA1 = "1945fa1cbb8ec2ffad2ccec7a0ca72ad52b20ef8"
group = "net.jomcraft.defaultsettings"

archivesBaseName = "DefaultSettings"

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.17.1'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                defaultsettings {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                defaultsettings {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'defaultsettings', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                defaultsettings {
                    source sourceSets.main
                }
            }
        }
    }
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.17.1-37.0.12'
}

def forge_version = "37.0.12"

processResources {

	duplicatesStrategy = 'include'

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'version': fileVersion, 'forge_version': forge_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
    
	manifest {
		attributes 'FMLAT': 'defaultsettings_at.cfg'
		attributes([
			"Specification-Title": "DefaultSettings",
			"Specification-Vendor": "Jomcraft Network",
			"Specification-Version": fileVersion,
			"Implementation-Title": "DefaultSettings",
			"Implementation-Version": fileVersion,
			"Implementation-Vendor" : "Jomcraft Network",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}

}

task sourcesJar(type: Jar) {
	
	from sourceSets.main.allSource
	classifier = 'sources'
}

task deobfJar(type: Jar) {
	
	from sourceSets.main.output
	classifier = 'deobf'
}

artifacts {
	archives jar
	archives sourcesJar
	archives deobfJar
}

curseforge {
	if(System.getenv("CURSE_API") != null && !System.getenv("CURSE_API").equals("")) {
		apiKey = System.getenv("CURSE_API")
		project {
			id = '318012'
			changelog = file("changelog.html")
			changelogType = 'html'
			releaseType = 'release'
			addGameVersion '1.17.1'
			mainArtifact(jar) {
				displayName = "$archivesBaseName-$version"
			}
    
			addArtifact (sourcesJar) {
				releaseType = 'release'
				displayName = "$archivesBaseName-$version-sources"
			}
    
			addArtifact (deobfJar) {
				releaseType = 'release'
				displayName = "$archivesBaseName-$version-deobf"
			}
		}
	}
}