plugins {
	id "fabric-loom" version "1.0-SNAPSHOT"
	id 'net.darkhax.curseforgegradle' version '1.0.11'
}

archivesBaseName = "${rootProject.name}"

ext.replace_version(version)

version = "1.19.x-${version}-Fabric"

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
	minecraft "com.mojang:minecraft:1.19.3"
	mappings loom.officialMojangMappings()

	modImplementation "net.fabricmc:fabric-loader:0.14.11"

	modImplementation "net.fabricmc.fabric-api:fabric-api:0.68.1+1.19.3"
	
	//implementation fg.deobf("curse.maven:jcp-659192:4404202")
	modImplementation "curse.maven:jcp-659192:4404202"
	//implementation project(":Core")
}

processResources {
	//from project(":Core").sourceSets.main.resources
}

tasks.withType(JavaCompile) {
	//source(project(":Core").sourceSets.main.allSource)
}

loom {

	accessWidenerPath = file("src/main/resources/defaultsettings.accesswidener")

	runs {
		client {
			client()
			setConfigName("Fabric 1.19.3 Client")
			ideConfigGenerated(true)
			runDir("./run")
		}
		server {
			server()
			setConfigName("Fabric 1.19.3 Server")
			ideConfigGenerated(true)
			runDir("./run")
		}
	}

	//mixin {
	//	defaultRefmapName = "${project.rootProject.name}.refmap.json"
	//}
}

//java {
//	withSourcesJar()
//}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar
	archives sourcesJar
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	dependsOn "build"
	if (System.getenv("CURSE_API") != null && !System.getenv("CURSE_API").equals("")) {
		disableVersionDetection()
		apiToken = System.getenv("CURSE_API")

		def mainFile = upload(451860, remapJar.archiveFile)
		mainFile.releaseType = 'alpha'
		mainFile.displayName = "$archivesBaseName-$version"
		mainFile.changelogType = 'html'
		mainFile.changelog = file('../../changelog.html')
		mainFile.addModLoader('Fabric')
		mainFile.addJavaVersion('Java 17')
		mainFile.addGameVersion('1.19.3')
		mainFile.addGameVersion('1.19.2')

		def sourcesFile = mainFile.withAdditionalFile(sourcesJar)
		sourcesFile.changelog = file('../../changelog.html')
		sourcesFile.displayName = "$archivesBaseName-$version-sources"
	}
}

task("copyRelease") {
	dependsOn "build"

	doFirst {
		println "Gathering builds"
		copy {
			def libDir = project.projectDir.toPath().resolve("build/libs")
			from(libDir) {
				include "*.jar"
				exclude "*-dev.jar", "*-sources.jar"
			}
			into "../../build/libs/"
			duplicatesStrategy DuplicatesStrategy.INCLUDE
		}
	}
}